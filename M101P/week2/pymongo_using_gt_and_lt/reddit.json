{"kind": "Listing", "data": {"modhash": "", "children": [{"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pt7ht", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "begriffs", "media": null, "score": 46, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 14, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/haskell/comments/3pt7ht/haskell_vim_ide_now_works_and_installs_with_stack/", "name": "t3_3pt7ht", "created": 1445570707.0, "url": "https://github.com/begriffs/haskell-vim-now?hr=2", "author_flair_text": null, "quarantine": false, "title": "Haskell VIM IDE now works (and installs) with Stack", "created_utc": 1445541907.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 46}}, {"kind": "t3", "data": {"domain": "mail.haskell.org", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pt560", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "alan_zimm", "media": null, "score": 24, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 13, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/haskell/comments/3pt560/ann_haskellide_project/", "name": "t3_3pt560", "created": 1445569778.0, "url": "https://mail.haskell.org/pipermail/haskell-cafe/2015-October/121875.html", "author_flair_text": null, "quarantine": false, "title": "[ANN] haskell-ide project", "created_utc": 1445540978.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 24}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;So unless a mod posts that&amp;#39;s it&amp;#39;s fine, I won&amp;#39;t place my specific inquiry here in order to not break the spirit of the post.&lt;/p&gt;\n\n&lt;p&gt;Basically I need a script that&amp;#39;s beyond my ability to write and I&amp;#39;m willing to pay for it.  It&amp;#39;s not anywhere near a full on software project.  I just need to process a set of values and run a (difficult) calculation on them and output the solution to the terminal or to a file or whatever.  Based on my non-professional experience, I&amp;#39;d say it&amp;#39;s on the level of an extremely hard homework assignment.&lt;/p&gt;\n\n&lt;p&gt;Is there a good place for me to ask for this?  I&amp;#39;m asking in this sub, because the problem seems particularly suited to Haskell or other functional languages.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "So unless a mod posts that's it's fine, I won't place my specific inquiry here in order to not break the spirit of the post.\n\nBasically I need a script that's beyond my ability to write and I'm willing to pay for it.  It's not anywhere near a full on software project.  I just need to process a set of values and run a (difficult) calculation on them and output the solution to the terminal or to a file or whatever.  Based on my non-professional experience, I'd say it's on the level of an extremely hard homework assignment.\n\nIs there a good place for me to ask for this?  I'm asking in this sub, because the problem seems particularly suited to Haskell or other functional languages.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pvbwg", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "rorriMnmaD", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": true, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pvbwg/is_it_appropriate_to_ask_for_help_writing_an/", "name": "t3_3pvbwg", "created": 1445605482.0, "url": "https://www.reddit.com/r/haskell/comments/3pvbwg/is_it_appropriate_to_ask_for_help_writing_an/", "author_flair_text": null, "quarantine": false, "title": "Is it appropriate to ask for help writing an algorithm here in exchange for bounties (money)? If not, is there a better place?", "created_utc": 1445576682.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi, all. Long time lurker, first time poster. Someone just posted about making a hex-grid game, so I&amp;#39;m finally coming out of the woodwork.&lt;/p&gt;\n\n&lt;p&gt;Many know about the almighty &lt;a href=\"http://www.redblobgames.com/grids/hexagons\"&gt;hexagon&lt;/a&gt; post. (Thank you, &lt;a href=\"/u/redblobgames\"&gt;/u/redblobgames&lt;/a&gt;!) I wanted to make a package to implement useful things on that page. Yes, I&amp;#39;m aware of the &lt;a href=\"https://hackage.haskell.org/package/grid\"&gt;grid&lt;/a&gt; library.&lt;/p&gt;\n\n&lt;p&gt;Could anyone look at the &lt;a href=\"https://github.com/j-rock/hexagon/\"&gt;code&lt;/a&gt; and tell me about areas for improvement (or features they would like to see)? Feel free to attack anything... implementations, naming, module structure, testing, documentation, formatting, usability.&lt;/p&gt;\n\n&lt;p&gt;(edit: formatting issues, forgot link)&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi, all. Long time lurker, first time poster. Someone just posted about making a hex-grid game, so I'm finally coming out of the woodwork.\n\nMany know about the almighty [hexagon](http://www.redblobgames.com/grids/hexagons) post. (Thank you, /u/redblobgames!) I wanted to make a package to implement useful things on that page. Yes, I'm aware of the [grid](https://hackage.haskell.org/package/grid) library.\n\nCould anyone look at the [code](https://github.com/j-rock/hexagon/) and tell me about areas for improvement (or features they would like to see)? Feel free to attack anything... implementations, naming, module structure, testing, documentation, formatting, usability.\n\n(edit: formatting issues, forgot link)", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3ptjm3", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "josephwrock", "media": null, "score": 9, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 6, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3ptjm3/seeking_review_for_hexagonal_grid_library/", "name": "t3_3ptjm3", "created": 1445575564.0, "url": "https://www.reddit.com/r/haskell/comments/3ptjm3/seeking_review_for_hexagonal_grid_library/", "author_flair_text": null, "quarantine": false, "title": "Seeking review for hexagonal grid library", "created_utc": 1445546764.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 9}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Anyone know a way to run a &lt;a href=\"http://www.vlfeat.org/overview/sift.html\"&gt;SIFT detector/descriptor&lt;/a&gt; from Haskell?&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;ve been doing my Machine Perception homework in Haskell so far, and don&amp;#39;t want to stop here.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Anyone know a way to run a [SIFT detector/descriptor](http://www.vlfeat.org/overview/sift.html) from Haskell?\n\nI've been doing my Machine Perception homework in Haskell so far, and don't want to stop here.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pv9iu", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "CarbonFire", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": true, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pv9iu/haskell_computer_vision_sift_binding/", "name": "t3_3pv9iu", "created": 1445604070.0, "url": "https://www.reddit.com/r/haskell/comments/3pv9iu/haskell_computer_vision_sift_binding/", "author_flair_text": null, "quarantine": false, "title": "Haskell Computer Vision SIFT binding?", "created_utc": 1445575270.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I\u2019m wondering if it would be possible to translate GHC Core or STG to &lt;a href=\"http://hackage.haskell.org/package/morte\"&gt;Morte&lt;/a&gt; (calculus of constructions). More generally, is there any information/papers on the difficulties/limitations of Morte/CoC?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I\u2019m wondering if it would be possible to translate GHC Core or STG to [Morte](http://hackage.haskell.org/package/morte) (calculus of constructions). More generally, is there any information/papers on the difficulties/limitations of Morte/CoC?\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pu1l1", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "altaic", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pu1l1/expressiveness_of_morte/", "name": "t3_3pu1l1", "created": 1445583151.0, "url": "https://www.reddit.com/r/haskell/comments/3pu1l1/expressiveness_of_morte/", "author_flair_text": null, "quarantine": false, "title": "Expressiveness of Morte", "created_utc": 1445554351.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Wasn&amp;#39;t one of Clean&amp;#39;s original design goals to be an educational language for strongly-typed, lazy functional programming? So how come we&amp;#39;re not hearing educators complaining that Clean&amp;#39;s &lt;code&gt;length&lt;/code&gt; function is overloaded and the one for &lt;code&gt;[]&lt;/code&gt; is just an instance? &lt;/p&gt;\n\n&lt;p&gt;In fact, I happened to go to a university where (at least at that time) Clean was used in the introductory functional programming class, and I specifically remember that when &lt;code&gt;length&lt;/code&gt; was used in an early example, the lecturer mentioned that it&amp;#39;s overloaded, we&amp;#39;ll be covering typeclasses in a couple lectures, just pretend that its type is specialized to &lt;code&gt;[]&lt;/code&gt;, and we swiftly moved on.&lt;/p&gt;\n\n&lt;p&gt;Why does the similar situation in Haskell suddenly freak out so many people?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Wasn't one of Clean's original design goals to be an educational language for strongly-typed, lazy functional programming? So how come we're not hearing educators complaining that Clean's `length` function is overloaded and the one for `[]` is just an instance? \n\nIn fact, I happened to go to a university where (at least at that time) Clean was used in the introductory functional programming class, and I specifically remember that when `length` was used in an early example, the lecturer mentioned that it's overloaded, we'll be covering typeclasses in a couple lectures, just pretend that its type is specialized to `[]`, and we swiftly moved on.\n\nWhy does the similar situation in Haskell suddenly freak out so many people?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pv0kq", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "gergoerdi", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pv0kq/why_dont_we_hear_people_complaining_about_cleans/", "name": "t3_3pv0kq", "created": 1445599304.0, "url": "https://www.reddit.com/r/haskell/comments/3pv0kq/why_dont_we_hear_people_complaining_about_cleans/", "author_flair_text": null, "quarantine": false, "title": "Why don't we hear people complaining about Clean's overloaded `length`?", "created_utc": 1445570504.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Does anyone have any examples of large GUI applications written using Functional Reactive Programming?&lt;/p&gt;\n\n&lt;p&gt;I am asking because it seems every FRP tutorial or example performs many tasks all packed inside a single function that &amp;quot;wires&amp;quot; everything together.  All of the FRP libraries I&amp;#39;ve looked at (&lt;code&gt;reactive-banana&lt;/code&gt;, &lt;code&gt;frpnow&lt;/code&gt;, and &lt;code&gt;reflex&lt;/code&gt;) all require behaviors and events to be constructed and connected inside a monad that manages the concept of current time. This is to prevent time leaks that are present in the original FRP specification by Conal Elliott. However, every tutorial and example I have found then creates all of their widgets and the interactions between widgets inside one large function.&lt;/p&gt;\n\n&lt;p&gt;I currently using Python at work, and I follow the Model-View-Presenter pattern pretty strictly. It works great, and I end up with clean separation between individual GUI components. I even get to use Reactive Extensions via RxPY, which makes my feel like I&amp;#39;m using FRP-lite :)&lt;/p&gt;\n\n&lt;p&gt;Basically, I think I&amp;#39;ve hit a wall while thinking of large FRP program architecture because I have very little FRP experience, and my mind might be tainted from my Object-Oriented GUI design experience. An example of any non-trivial FRP application (meaning more than one interacting component, more than one FRP construction function, etc) would really help me out.&lt;/p&gt;\n\n&lt;p&gt;&lt;strong&gt;EDIT:&lt;/strong&gt; Just so everyone is aware, I am not asking this in any confrontational sense. I love the work the FRP folks have done, and I just want to use it effectively. Mainly, I want to learn how to organize my GUI programs so that the FRP Monad isn&amp;#39;t intertwined throughout my program, and I don&amp;#39;t have spaghetti code. I want to be able to switch UI toolkits or FRP implementations without a superhuman effort. &lt;a href=\"/u/mightybyte\"&gt;/u/mightybyte&lt;/a&gt; made a good point: think of it as learning to move parts of your program outside of the IO monad.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Does anyone have any examples of large GUI applications written using Functional Reactive Programming?\n\nI am asking because it seems every FRP tutorial or example performs many tasks all packed inside a single function that \"wires\" everything together.  All of the FRP libraries I've looked at (`reactive-banana`, `frpnow`, and `reflex`) all require behaviors and events to be constructed and connected inside a monad that manages the concept of current time. This is to prevent time leaks that are present in the original FRP specification by Conal Elliott. However, every tutorial and example I have found then creates all of their widgets and the interactions between widgets inside one large function.\n\nI currently using Python at work, and I follow the Model-View-Presenter pattern pretty strictly. It works great, and I end up with clean separation between individual GUI components. I even get to use Reactive Extensions via RxPY, which makes my feel like I'm using FRP-lite :)\n\nBasically, I think I've hit a wall while thinking of large FRP program architecture because I have very little FRP experience, and my mind might be tainted from my Object-Oriented GUI design experience. An example of any non-trivial FRP application (meaning more than one interacting component, more than one FRP construction function, etc) would really help me out.\n\n**EDIT:** Just so everyone is aware, I am not asking this in any confrontational sense. I love the work the FRP folks have done, and I just want to use it effectively. Mainly, I want to learn how to organize my GUI programs so that the FRP Monad isn't intertwined throughout my program, and I don't have spaghetti code. I want to be able to switch UI toolkits or FRP implementations without a superhuman effort. /u/mightybyte made a good point: think of it as learning to move parts of your program outside of the IO monad.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pqdln", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "HoboBob1", "media": null, "score": 61, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 61, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": 1445527862.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pqdln/large_applications_written_using_frp/", "name": "t3_3pqdln", "created": 1445516747.0, "url": "https://www.reddit.com/r/haskell/comments/3pqdln/large_applications_written_using_frp/", "author_flair_text": null, "quarantine": false, "title": "Large Applications written using FRP", "created_utc": 1445487947.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 61}}, {"kind": "t3", "data": {"domain": "mail.haskell.org", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pql22", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "hagda", "media": null, "score": 47, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 4, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/haskell/comments/3pql22/history_of_the_core_libraries_committee/", "name": "t3_3pql22", "created": 1445521043.0, "url": "https://mail.haskell.org/pipermail/libraries/2015-October/026390.html", "author_flair_text": null, "quarantine": false, "title": "History of the Core Libraries Committee", "created_utc": 1445492243.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 47}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m writing bachelor thesis about reactive programming in Haskell. I&amp;#39;m using Euterpea to develop simple audio application. I almost finished Haskell School of Music by Paul Hudak.&lt;/p&gt;\n\n&lt;p&gt;But, as some of you know, Mr. Hudak passed away earlier this year and the book is now finished - chapters on frequency modulation are only half way done. Physical Modelling chapter has a lot of empty spaces. I can&amp;#39;t understand ideas presented there if there is no explanation :(&lt;/p&gt;\n\n&lt;p&gt;Is there any information whether the book is going to be finished? I don&amp;#39;t even know how can I obtain such information.&lt;/p&gt;\n\n&lt;p&gt;Is anyone except Paul Hudak involved in writing Haskell School of Music?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm writing bachelor thesis about reactive programming in Haskell. I'm using Euterpea to develop simple audio application. I almost finished Haskell School of Music by Paul Hudak.\n\nBut, as some of you know, Mr. Hudak passed away earlier this year and the book is now finished - chapters on frequency modulation are only half way done. Physical Modelling chapter has a lot of empty spaces. I can't understand ideas presented there if there is no explanation :(\n\nIs there any information whether the book is going to be finished? I don't even know how can I obtain such information.\n\nIs anyone except Paul Hudak involved in writing Haskell School of Music?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pt3dg", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "lovaz", "media": null, "score": 3, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pt3dg/continuation_of_haskell_school_of_music_by_paul/", "name": "t3_3pt3dg", "created": 1445569097.0, "url": "https://www.reddit.com/r/haskell/comments/3pt3dg/continuation_of_haskell_school_of_music_by_paul/", "author_flair_text": null, "quarantine": false, "title": "Continuation of \"Haskell School of Music\" by Paul Hudak. Where to look?", "created_utc": 1445540297.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 3}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;We all love microbenchmarks, why wouldn&amp;#39;t we?&lt;/p&gt;\n\n&lt;p&gt;So, there was a new microbenchmark posted, and again, it striked me that my naive Haskell implementation is twice as slow as python one ran from PyPy, and just as slow as Python one ran from CPython (regular &amp;quot;python&amp;quot;).&lt;/p&gt;\n\n&lt;p&gt;Here&amp;#39;s a link to my fork: &lt;a href=\"https://github.com/k-bx/benchmarks/tree/master/json\"&gt;https://github.com/k-bx/benchmarks/tree/master/json&lt;/a&gt;&lt;/p&gt;\n\n&lt;ol&gt;\n&lt;li&gt;Generate json with &lt;code&gt;ruby generate_json.rb&lt;/code&gt; (sorry)&lt;/li&gt;\n&lt;li&gt;Run python-based one with &lt;code&gt;time python test.py&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Build haskell one with &lt;code&gt;cd json-hs &amp;amp;&amp;amp; make &amp;amp;&amp;amp; cd ..&lt;/code&gt;&lt;/li&gt;\n&lt;li&gt;Run haskell one with &lt;code&gt;time ./json-hs-bin&lt;/code&gt;&lt;/li&gt;\n&lt;/ol&gt;\n\n&lt;p&gt;My results after 15 minutes of poking:&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;\u279c  json git:(master) \u2717 time pypy ./test.py\n0.500162876712\n0.499362626291\n0.499902604092\npypy ./test.py  5.37s user 0.91s system 99% cpu 6.346 total\n\u279c  json git:(master) \u2717 time python ./test.py\n0.500162876712\n0.499362626291\n0.499902604092\npython ./test.py  11.44s user 0.81s system 98% cpu 12.443 total\n\u279c  json git:(master) \u2717 time ./json-hs-bin\n0.5001628767123875\n0.4993626262908803\n0.49990260409169224\n./json-hs-bin  12.37s user 1.60s system 98% cpu 14.207 total\n&lt;/code&gt;&lt;/pre&gt;\n\n&lt;p&gt;Original reddit post with discussions: &lt;a href=\"https://www.reddit.com/r/programming/comments/3pojrz/the_fastest_json_parser_in_the_world/\"&gt;https://www.reddit.com/r/programming/comments/3pojrz/the_fastest_json_parser_in_the_world/&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;So, my question is: is this &amp;quot;ok&amp;quot; or is there some relatively-simple trick that could be applied and considerably improve performance? Thank you.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "We all love microbenchmarks, why wouldn't we?\n\nSo, there was a new microbenchmark posted, and again, it striked me that my naive Haskell implementation is twice as slow as python one ran from PyPy, and just as slow as Python one ran from CPython (regular \"python\").\n\nHere's a link to my fork: https://github.com/k-bx/benchmarks/tree/master/json\n\n1. Generate json with `ruby generate_json.rb` (sorry)\n2. Run python-based one with `time python test.py`\n3. Build haskell one with `cd json-hs &amp;&amp; make &amp;&amp; cd ..`\n4. Run haskell one with `time ./json-hs-bin`\n\nMy results after 15 minutes of poking:\n\n    \u279c  json git:(master) \u2717 time pypy ./test.py\n    0.500162876712\n    0.499362626291\n    0.499902604092\n    pypy ./test.py  5.37s user 0.91s system 99% cpu 6.346 total\n    \u279c  json git:(master) \u2717 time python ./test.py\n    0.500162876712\n    0.499362626291\n    0.499902604092\n    python ./test.py  11.44s user 0.81s system 98% cpu 12.443 total\n    \u279c  json git:(master) \u2717 time ./json-hs-bin\n    0.5001628767123875\n    0.4993626262908803\n    0.49990260409169224\n    ./json-hs-bin  12.37s user 1.60s system 98% cpu 14.207 total\n\nOriginal reddit post with discussions: https://www.reddit.com/r/programming/comments/3pojrz/the_fastest_json_parser_in_the_world/\n\nSo, my question is: is this \"ok\" or is there some relatively-simple trick that could be applied and considerably improve performance? Thank you.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pr0n3", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "k-bx", "media": null, "score": 15, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 23, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pr0n3/new_microbenchmark_question/", "name": "t3_3pr0n3", "created": 1445532089.0, "url": "https://www.reddit.com/r/haskell/comments/3pr0n3/new_microbenchmark_question/", "author_flair_text": null, "quarantine": false, "title": "New microbenchmark question", "created_utc": 1445503289.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 15}}, {"kind": "t3", "data": {"domain": "hackage.haskell.org", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3powyc", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Darwin226", "media": null, "score": 30, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 14, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/haskell/comments/3powyc/a_library_for_making_presentations_in_haskell/", "name": "t3_3powyc", "created": 1445493865.0, "url": "https://hackage.haskell.org/package/Slides", "author_flair_text": null, "quarantine": false, "title": "A library for making presentations in Haskell with diagrams", "created_utc": 1445465065.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 30}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I&amp;#39;m using a data structure that&amp;#39;s a RoseTree with alternating types at each level. The code I have is below (and at &lt;a href=\"http://lpaste.net/143599\"&gt;http://lpaste.net/143599&lt;/a&gt;). Is there a better way to do this?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;data Node b a = Node { me :: a, kids :: [Node a b] } deriving Show\n\ndata NodeR a b = Rev (Node b a) deriving Show\n\ninstance Bifunctor Node where\n  bimap f g (Node a bs) = Node (g a) [Node (f b) (bimap f g &amp;lt;$&amp;gt; as) | Node b as &amp;lt;- bs]\n\ninstance Functor (Node b) where\n  fmap = bimap id\n\ninstance Functor (NodeR b) where\n  fmap f (Rev t) = Rev $ bimap f id t\n\ninstance Comonad (Node b) where\n  extract (Node a _) = a\n  duplicate t@(Node _ bs) = Node t [Node b (duplicate &amp;lt;$&amp;gt; as) | Node b as &amp;lt;- bs]\n\ninstance Foldable (Node b) where\n  foldMap f (Node a bs) = foldr mappend (f a) [foldr mappend mempty (foldMap f &amp;lt;$&amp;gt; as) | Node b as &amp;lt;- bs]\n\ninstance Foldable (NodeR b) where\n  foldMap f (Rev (Node a bs)) = foldr mappend mempty [foldr mappend (f b) $ foldMap f . Rev &amp;lt;$&amp;gt; as | Node b as &amp;lt;- bs]\n\ninstance Traversable (Node b) where\n  traverse f (Node a bs) = Node &amp;lt;$&amp;gt; f a &amp;lt;*&amp;gt; sequenceA [ Node b &amp;lt;$&amp;gt; sequenceA (traverse f &amp;lt;$&amp;gt; as) | Node b as &amp;lt;- bs]\n\nana :: (Show b , Show a) =&amp;gt; (b -&amp;gt; [a]) -&amp;gt; (a -&amp;gt; [b]) -&amp;gt; b -&amp;gt; Node a b\nana vs ks k = traceShow (k, vs k) $ Node k [Node v $ ana vs ks &amp;lt;$&amp;gt; ks v | v &amp;lt;- vs k]\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I'm using a data structure that's a RoseTree with alternating types at each level. The code I have is below (and at http://lpaste.net/143599). Is there a better way to do this?\n\n    data Node b a = Node { me :: a, kids :: [Node a b] } deriving Show\n    \n    data NodeR a b = Rev (Node b a) deriving Show\n    \n    instance Bifunctor Node where\n      bimap f g (Node a bs) = Node (g a) [Node (f b) (bimap f g &lt;$&gt; as) | Node b as &lt;- bs]\n    \n    instance Functor (Node b) where\n      fmap = bimap id\n    \n    instance Functor (NodeR b) where\n      fmap f (Rev t) = Rev $ bimap f id t\n    \n    instance Comonad (Node b) where\n      extract (Node a _) = a\n      duplicate t@(Node _ bs) = Node t [Node b (duplicate &lt;$&gt; as) | Node b as &lt;- bs]\n    \n    instance Foldable (Node b) where\n      foldMap f (Node a bs) = foldr mappend (f a) [foldr mappend mempty (foldMap f &lt;$&gt; as) | Node b as &lt;- bs]\n    \n    instance Foldable (NodeR b) where\n      foldMap f (Rev (Node a bs)) = foldr mappend mempty [foldr mappend (f b) $ foldMap f . Rev &lt;$&gt; as | Node b as &lt;- bs]\n    \n    instance Traversable (Node b) where\n      traverse f (Node a bs) = Node &lt;$&gt; f a &lt;*&gt; sequenceA [ Node b &lt;$&gt; sequenceA (traverse f &lt;$&gt; as) | Node b as &lt;- bs]\n    \n    ana :: (Show b , Show a) =&gt; (b -&gt; [a]) -&gt; (a -&gt; [b]) -&gt; b -&gt; Node a b\n    ana vs ks k = traceShow (k, vs k) $ Node k [Node v $ ana vs ks &lt;$&gt; ks v | v &lt;- vs k]\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pqj6u", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "tondwalkar", "media": null, "score": 7, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 7, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pqj6u/alternating_rosetree_data_node_b_a_node_a_node_a_b/", "name": "t3_3pqj6u", "created": 1445519945.0, "url": "https://www.reddit.com/r/haskell/comments/3pqj6u/alternating_rosetree_data_node_b_a_node_a_node_a_b/", "author_flair_text": null, "quarantine": false, "title": "Alternating RoseTree (`data Node b a = Node a [Node a b]`)", "created_utc": 1445491145.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 7}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Just started a module in Functional Programming at Uni, I think I understand how this code works but not why these functions are &amp;quot;better&amp;quot;. Supposedly map&amp;#39; and filter&amp;#39; are slightly better than the prelude versions and map&amp;#39;&amp;#39; and filter&amp;#39;&amp;#39; are even better than that. &lt;/p&gt;\n\n&lt;p&gt;I think the map&amp;#39; and filter&amp;#39; ones are they slightly faster because when it hits the base case it doesn&amp;#39;t bother checking if the function has the right types.&lt;/p&gt;\n\n&lt;p&gt;But map&amp;#39;&amp;#39; and filter&amp;#39;&amp;#39; just seem to get some of their arguments first and some later. How is this an improvement?&lt;/p&gt;\n\n&lt;pre&gt;&lt;code&gt;map&amp;#39; :: (a-&amp;gt;b) -&amp;gt; [a] -&amp;gt; [b]\nmap&amp;#39; _ [] = [] \nmap&amp;#39; f (x:xs) = f x : map&amp;#39; f xs \n\nfilter&amp;#39; :: (a-&amp;gt;Bool) -&amp;gt; [a] -&amp;gt; [a]\nfilter&amp;#39; _ [] = [] \nfilter&amp;#39; p (x:xs) | p x       = x : filter p xs\n                 | otherwise = filter p xs\n\n\n\nmap&amp;#39;&amp;#39; :: (a-&amp;gt;b) -&amp;gt; [a] -&amp;gt; [b]\nmap&amp;#39;&amp;#39; f = mf\n  where mf []     = []\n        mf (x:xs) = f x : mf xs\n\nfilter&amp;#39;&amp;#39; :: (a-&amp;gt;Bool) -&amp;gt; [a] -&amp;gt; [a]\nfilter&amp;#39;&amp;#39; p = fp\n  where fp []     = []\n        fp (x:xs) = (if p x then (x:) else id) (fp xs)\n&lt;/code&gt;&lt;/pre&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Just started a module in Functional Programming at Uni, I think I understand how this code works but not why these functions are \"better\". Supposedly map' and filter' are slightly better than the prelude versions and map'' and filter'' are even better than that. \n\nI think the map' and filter' ones are they slightly faster because when it hits the base case it doesn't bother checking if the function has the right types.\n\nBut map'' and filter'' just seem to get some of their arguments first and some later. How is this an improvement?\n\n\n    map' :: (a-&gt;b) -&gt; [a] -&gt; [b]\n    map' _ [] = [] \n\tmap' f (x:xs) = f x : map' f xs \n\n\tfilter' :: (a-&gt;Bool) -&gt; [a] -&gt; [a]\n\tfilter' _ [] = [] \n\tfilter' p (x:xs) | p x       = x : filter p xs\n\t                 | otherwise = filter p xs\n\n\n\n\tmap'' :: (a-&gt;b) -&gt; [a] -&gt; [b]\n\tmap'' f = mf\n\t  where mf []     = []\n\t        mf (x:xs) = f x : mf xs\n\n\tfilter'' :: (a-&gt;Bool) -&gt; [a] -&gt; [a]\n\tfilter'' p = fp\n\t  where fp []     = []\n\t        fp (x:xs) = (if p x then (x:) else id) (fp xs)\n", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pox3r", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "green957", "media": null, "score": 15, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 21, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pox3r/new_to_haskell_why_are_these_functions_better/", "name": "t3_3pox3r", "created": 1445493934.0, "url": "https://www.reddit.com/r/haskell/comments/3pox3r/new_to_haskell_why_are_these_functions_better/", "author_flair_text": null, "quarantine": false, "title": "New to Haskell, why are these functions \"better\" ?", "created_utc": 1445465134.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 15}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;I want to learn type theory. Hopefully something relatively comprehensive, hopefully something that covers dependant types and so on.&lt;/p&gt;\n\n&lt;p&gt;I am NOT looking to learn practical type theory, I&amp;#39;ve already used Haskell for a long time now, I&amp;#39;m looking to further my understanding and abilities and I&amp;#39;ve determined this is the best way for me.&lt;/p&gt;\n\n&lt;p&gt;I currently have &amp;quot;Type Theory and Formal Proof&amp;quot; by Rob Nederpelt and Herman Geuvers. This seems like a good book, and it is certainly comprehensive. I was wondering what other books people had good experiences with?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "I want to learn type theory. Hopefully something relatively comprehensive, hopefully something that covers dependant types and so on.\n\nI am NOT looking to learn practical type theory, I've already used Haskell for a long time now, I'm looking to further my understanding and abilities and I've determined this is the best way for me.\n\nI currently have \"Type Theory and Formal Proof\" by Rob Nederpelt and Herman Geuvers. This seems like a good book, and it is certainly comprehensive. I was wondering what other books people had good experiences with?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3ppk8t", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "fruitbooploops", "media": null, "score": 10, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 9, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3ppk8t/best_introduction_to_type_theory/", "name": "t3_3ppk8t", "created": 1445503531.0, "url": "https://www.reddit.com/r/haskell/comments/3ppk8t/best_introduction_to_type_theory/", "author_flair_text": null, "quarantine": false, "title": "Best introduction to type theory", "created_utc": 1445474731.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 10}}, {"kind": "t3", "data": {"domain": "github.com", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3plyfa", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "rubik_", "media": null, "score": 68, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 26, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/haskell/comments/3plyfa/argon_measure_your_codes_complexity_first_haskell/", "name": "t3_3plyfa", "created": 1445445368.0, "url": "https://github.com/rubik/argon", "author_flair_text": null, "quarantine": false, "title": "argon: measure your code's complexity (first Haskell project, feedback welcomed)", "created_utc": 1445416568.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 68}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hi. I&amp;#39;m planning to (maybe) write a game of &lt;a href=\"http://mathworld.wolfram.com/GameofHex.html\"&gt;Hex&lt;/a&gt; in Haskell. How would I represent the board? Should I use a quadtree, or Vectors of Vectors, or something else? I need to be able to check easily if both ends are connected.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m planning to call it Hexal.&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;m planning to use minmax and I want to use pure code.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hi. I'm planning to (maybe) write a game of [Hex](http://mathworld.wolfram.com/GameofHex.html) in Haskell. How would I represent the board? Should I use a quadtree, or Vectors of Vectors, or something else? I need to be able to check easily if both ends are connected.\n\nI'm planning to call it Hexal.\n\nI'm planning to use minmax and I want to use pure code.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pm6yc", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "jkabrg", "media": null, "score": 22, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 27, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": 1445438867.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pm6yc/how_do_you_do_a_hex_board_in_haskell/", "name": "t3_3pm6yc", "created": 1445451846.0, "url": "https://www.reddit.com/r/haskell/comments/3pm6yc/how_do_you_do_a_hex_board_in_haskell/", "author_flair_text": null, "quarantine": false, "title": "How do you do a Hex board in Haskell?", "created_utc": 1445423046.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 22}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Since Google also has a few projects in Haskell I was wondering if there is a styleguide that they use? It appears there are quite a few of them for other languages, see e.g. &lt;a href=\"http://google-styleguide.googlecode.com/svn/trunk/\"&gt;here&lt;/a&gt;.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Since Google also has a few projects in Haskell I was wondering if there is a styleguide that they use? It appears there are quite a few of them for other languages, see e.g. [here](http://google-styleguide.googlecode.com/svn/trunk/).", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3ple0s", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "kapuzineralex", "media": null, "score": 45, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 26, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3ple0s/google_styleguide_for_haskell/", "name": "t3_3ple0s", "created": 1445431439.0, "url": "https://www.reddit.com/r/haskell/comments/3ple0s/google_styleguide_for_haskell/", "author_flair_text": null, "quarantine": false, "title": "Google styleguide for Haskell", "created_utc": 1445402639.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 45}}, {"kind": "t3", "data": {"domain": "yesodweb.com", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3plh9h", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Pikachut", "media": null, "score": 23, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 5, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/haskell/comments/3plh9h/using_wais_vault_for_fun_and_profit/", "name": "t3_3plh9h", "created": 1445433284.0, "url": "http://www.yesodweb.com/blog/2015/10/using-wais-vault", "author_flair_text": null, "quarantine": false, "title": "Using WAI's vault for fun and profit", "created_utc": 1445404484.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 23}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;What are the interesting abstract and general concepts that a Haskeller might want to learn about? (when I say concepts I mean monads, lenses, ...) What are the examples of application of these concepts?&lt;/p&gt;\n\n&lt;p&gt;I would be most grateful for mentions of concepts based on some actual theory (in other words I prefer reading about &lt;em&gt;discovered&lt;/em&gt; stuff rather than &lt;em&gt;invented&lt;/em&gt;, to use the differentiation I hear from Philip Wadler).&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "What are the interesting abstract and general concepts that a Haskeller might want to learn about? (when I say concepts I mean monads, lenses, ...) What are the examples of application of these concepts?\n\nI would be most grateful for mentions of concepts based on some actual theory (in other words I prefer reading about *discovered* stuff rather than *invented*, to use the differentiation I hear from Philip Wadler).", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pmjne", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "jd823592", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 2, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": 1445463784.0, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pmjne/interesting_abstract_concepts_in_functional/", "name": "t3_3pmjne", "created": 1445459920.0, "url": "https://www.reddit.com/r/haskell/comments/3pmjne/interesting_abstract_concepts_in_functional/", "author_flair_text": null, "quarantine": false, "title": "Interesting abstract concepts in Functional Programming/Category Theory", "created_utc": 1445431120.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;Hello!&lt;/p&gt;\n\n&lt;p&gt;Im using winGHCi but Im not quite sure how to install haste, I have downloaded and installet the haste installer from their website but then Im not sure how to use it. Do I have to install in in a certain path or something?&lt;/p&gt;\n\n&lt;p&gt;Cheers.&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "Hello!\n\nIm using winGHCi but Im not quite sure how to install haste, I have downloaded and installet the haste installer from their website but then Im not sure how to use it. Do I have to install in in a certain path or something?\n\nCheers.", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pmhn5", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "Kablaow", "media": null, "score": 5, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 1, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pmhn5/install_haste_windows/", "name": "t3_3pmhn5", "created": 1445458830.0, "url": "https://www.reddit.com/r/haskell/comments/3pmhn5/install_haste_windows/", "author_flair_text": null, "quarantine": false, "title": "Install Haste, windows", "created_utc": 1445430030.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 5}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;If we take the subset of Haskell consisting only of &lt;a href=\"http://lpaste.net/143550\"&gt;datatypes and terminating functions&lt;/a&gt;, couldn&amp;#39;t code in that subset be mechanically compiled to &lt;a href=\"http://lpaste.net/143551\"&gt;readable code&lt;/a&gt; on most market languages? Functions become functions, pattern matching becomes switchs and values become labelled hashmaps (ruby, python, javascript) or objects (java, c#). There are two reasons one would need that. The first would be that of being able to easily port Haskell code to targets GHC doesn&amp;#39;t reach (Android, iOS). The second one would be that your code would be able to be maintained by programmers of language X - which is a very common real-world requisite. There is already some success in that kind of compile-to-everything language (ref Haxe).&lt;/p&gt;\n\n&lt;p&gt;I&amp;#39;d like to know why there isn&amp;#39;t anything like that yet (and an apparent lack of the interest on the matter), and what would be the ideal subset of Haskell to use for this (is it minimal enough I could implement myself)?&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "If we take the subset of Haskell consisting only of [datatypes and terminating functions](http://lpaste.net/143550), couldn't code in that subset be mechanically compiled to [readable code](http://lpaste.net/143551) on most market languages? Functions become functions, pattern matching becomes switchs and values become labelled hashmaps (ruby, python, javascript) or objects (java, c#). There are two reasons one would need that. The first would be that of being able to easily port Haskell code to targets GHC doesn't reach (Android, iOS). The second one would be that your code would be able to be maintained by programmers of language X - which is a very common real-world requisite. There is already some success in that kind of compile-to-everything language (ref Haxe).\n\nI'd like to know why there isn't anything like that yet (and an apparent lack of the interest on the matter), and what would be the ideal subset of Haskell to use for this (is it minimal enough I could implement myself)?", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pmtj0", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "SrPeixinho", "media": null, "score": 2, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 34, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pmtj0/a_subset_of_haskell_compiled_to_maintainable_code/", "name": "t3_3pmtj0", "created": 1445464642.0, "url": "https://www.reddit.com/r/haskell/comments/3pmtj0/a_subset_of_haskell_compiled_to_maintainable_code/", "author_flair_text": null, "quarantine": false, "title": "A subset of Haskell compiled to maintainable code in all market languages?", "created_utc": 1445435842.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 2}}, {"kind": "t3", "data": {"domain": "self.haskell", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": "&lt;!-- SC_OFF --&gt;&lt;div class=\"md\"&gt;&lt;p&gt;&amp;quot;Monadic Parsers: Implementing a micro Parsec&amp;quot; -- Omer Iqbal&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=wzz0sm1YCWg\"&gt;https://www.youtube.com/watch?v=wzz0sm1YCWg&lt;/a&gt;&lt;/p&gt;\n\n&lt;p&gt;&amp;quot;Explaining type classes that seem difficult for beginners&amp;quot; -- Tim Oxley and Micha\u0142 J. Gajda&lt;/p&gt;\n\n&lt;p&gt;&lt;a href=\"https://www.youtube.com/watch?v=cXhfLqCY4-g\"&gt;https://www.youtube.com/watch?v=cXhfLqCY4-g&lt;/a&gt;&lt;/p&gt;\n&lt;/div&gt;&lt;!-- SC_ON --&gt;", "selftext": "\"Monadic Parsers: Implementing a micro Parsec\" -- Omer Iqbal\n\nhttps://www.youtube.com/watch?v=wzz0sm1YCWg\n\n\"Explaining type classes that seem difficult for beginners\" -- Tim Oxley and Micha\u0142 J. Gajda\n\nhttps://www.youtube.com/watch?v=cXhfLqCY4-g", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pl1zn", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "MnO2", "media": null, "score": 12, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 0, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": true, "from_id": null, "permalink": "/r/haskell/comments/3pl1zn/haskellsg_octorber_talks_recordings/", "name": "t3_3pl1zn", "created": 1445400221.0, "url": "https://www.reddit.com/r/haskell/comments/3pl1zn/haskellsg_octorber_talks_recordings/", "author_flair_text": null, "quarantine": false, "title": "Haskell.SG Octorber Talks' Recordings", "created_utc": 1445396621.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 12}}, {"kind": "t3", "data": {"domain": "hackage.haskell.org", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pi3nw", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "chadaustin", "media": null, "score": 57, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 33, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/haskell/comments/3pi3nw/announcing_pathwalk_an_implementation_of_pythons/", "name": "t3_3pi3nw", "created": 1445383714.0, "url": "https://hackage.haskell.org/package/pathwalk", "author_flair_text": null, "quarantine": false, "title": "Announcing pathwalk: an implementation of Python's excellent os.walk for Haskell", "created_utc": 1445354914.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 57}}, {"kind": "t3", "data": {"domain": "pijul.org", "banned_by": null, "media_embed": {}, "subreddit": "haskell", "selftext_html": null, "selftext": "", "likes": null, "suggested_sort": null, "user_reports": [], "secure_media": null, "link_flair_text": null, "id": "3pj1xi", "from_kind": null, "gilded": 0, "archived": false, "clicked": false, "report_reasons": null, "author": "sideEffffECt", "media": null, "score": 28, "approved_by": null, "over_18": false, "hidden": false, "num_comments": 25, "thumbnail": "", "subreddit_id": "t5_2qh36", "hide_score": false, "edited": false, "link_flair_css_class": null, "author_flair_css_class": null, "downs": 0, "secure_media_embed": {}, "saved": false, "removal_reason": null, "stickied": false, "from": null, "is_self": false, "from_id": null, "permalink": "/r/haskell/comments/3pj1xi/pijul_combines_speed_of_git_usability_of_darcs/", "name": "t3_3pj1xi", "created": 1445371285.0, "url": "https://pijul.org/", "author_flair_text": null, "quarantine": false, "title": "Pijul combines speed of git, usability of darcs", "created_utc": 1445367685.0, "distinguished": null, "mod_reports": [], "visited": false, "num_reports": null, "ups": 28}}], "after": "t3_3pj1xi", "before": null}}